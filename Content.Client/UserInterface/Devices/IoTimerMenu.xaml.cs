using Content.Client.GameObjects.Components.Construction.Devices;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.IoC;

namespace Content.Client.UserInterface.Devices
{
    [GenerateTypedNameReferences]
    public partial class IoTimerMenu : SS14Window
    {
        private readonly IoTimerBoundUserInterface _owner;

        private readonly ClientIoDeviceTimerComponent _timerComponent;
        public IoTimerMenu(IoTimerBoundUserInterface owner)
        {
            _owner = owner;

            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            _timerComponent = _owner.TimerComponent;

            InputSlider.MaxValue = _timerComponent.MaxTimerDelay;
            InputSlider.MinValue = _timerComponent.MinTimerDelay;
            InputSlider.Value = _timerComponent.TimerDelay;

            InputSlider.StepSize = 1f;
            InputSlider.Precision = 1;

            ConfirmButton.OnPressed += ConfirmPressed;
        }

        public float GetTimerDelay()
        {
            return InputSlider.Value;
        }

        private void ConfirmPressed(BaseButton.ButtonEventArgs args)
        {
            _timerComponent.UpdateTimerDelay(GetTimerDelay());
            Close();
        }
    }
}
